:test_OPPlus_1_6
wait 0
gosub @initialization_var
05E0: 0@ = read_memory _CPad_KeyBoardCheatString size 1 virtual_protect 0
05E0: 1@ = read_memory 0x00A10943 size 1 virtual_protect 0
05E0: 2@ = read_memory 0x00A10944 size 1 virtual_protect 0
05E0: 3@ = read_memory 0x00A10945 size 1 virtual_protect 0
05E0: 4@ = read_memory 0x00A10946 size 1 virtual_protect 0
05E0: 5@ = read_memory 0x00A10947 size 1 virtual_protect 0
if and
 5@ == 0x4F //O
 4@ == 0x50 //p
 3@ == 0x50 //p
 2@ == 0x4C //L
 1@ == 0x55 //U
 0@ == 0x53 //S
jf @test_OPPlus_1_6 
05DF: write_memory _CPad_KeyBoardCheatString size 4 value 0 virtual_protect 1
05DF: write_memory 0x00A10946 size 2 value 0 virtual_protect 1
05F5: call_scm_func @show_text_box params_count 2 @test_text_1 @textbox_buf
05F5: call_scm_func @show_text_styled params_count 2 @test_text_2 @textstyled_buf
wait 3000  
05F5: call_scm_func @show_text_lowpriority params_count 2 @test_text_3 @text_buf

:test_bit_1_6
wait 0
05E0: 0@ = read_memory _CPad_KeyBoardCheatString size 1 virtual_protect 0
05E0: 1@ = read_memory 0x00A10943 size 1 virtual_protect 0
05E0: 2@ = read_memory 0x00A10944 size 1 virtual_protect 0
05E0: 3@ = read_memory 0x00A10945 size 1 virtual_protect 0
05E0: 4@ = read_memory 0x00A10946 size 1 virtual_protect 0
05E0: 5@ = read_memory 0x00A10947 size 1 virtual_protect 0
05E0: 6@ = read_memory 0x00A10948 size 1 virtual_protect 0
if and
 6@ == 0x54 //T
 5@ == 0x45 //E
 4@ == 0x53 //S
 3@ == 0x54 //T
 2@ == 0x42 //B
 1@ == 0x49 //I
 0@ == 0x54 //T
jf @close_test_OPPlus_1_6
05DF: write_memory _CPad_KeyBoardCheatString size 4 value 0 virtual_protect 1
05DF: write_memory 0x00A10946 size 2 value 0 virtual_protect 1
05DF: write_memory 0x00A10948 size 1 value 0 virtual_protect 1
00BE: text_clear_all 
05F5: call_scm_func @show_text_box params_count 2 @test_bit_0BB4_0BC5_text @textbox_buf
11@ = 1
if
0BB4:   test 11@ bit 0
jf @Clear_bit_1_6
05F5: call_scm_func @show_text_number_styled params_count 8 @test_bit_0BB4_text @textnumber_buf 11@ -1 -1 -1 -1 -1
wait 5000
if
0BB5:   test 11@ bit 0
jf @Clear_bit_1_6
05F5: call_scm_func @show_text_number_styled params_count 8 @test_bit_0BB5_text @textnumber_buf 11@ -1 -1 -1 -1 -1
wait 5000 
if
0BB6:   test 11@ bit 0
jf @Clear_bit_1_6
05F5: call_scm_func @show_text_number_styled params_count 8 @test_bit_0BB6_text @textnumber_buf 11@ -1 -1 -1 -1 -1
wait 5000
11@ = 0
if
8BB7:   not test 11@ bit 1
jf @Clear_bit_1_6
05F5: call_scm_func @show_text_number_styled params_count 8 @test_bit_0BB7_text @textnumber_buf 11@ -1 -1 -1 -1 -1
wait 5000
if
8BB8:   not test 11@ bit 1
jf @Clear_bit_1_6
05F5: call_scm_func @show_text_number_styled params_count 8 @test_bit_0BB8_text @textnumber_buf 11@ -1 -1 -1 -1 -1
wait 5000
if
8BB9:   not test 11@ bit 1
jf @Clear_bit_1_6
05F5: call_scm_func @show_text_number_styled params_count 8 @test_bit_0BB9_text @textnumber_buf 11@ -1 -1 -1 -1 -1
wait 5000
0@ = 0
1@ = 1
2@ = 2
3@ = 0
4@ = -1
5@ = -2
14@ = 0
15@ = 31

:set_bit_1_6
0BBA: set 0@ bit 14@
0BBB: set 1@ bit 14@
0BBC: set 2@ bit 14@
0BBD: set 3@ bit 14@
0BBE: set 4@ bit 14@
0BBF: set 5@ bit 15@
05F5: call_scm_func @show_text_number_styled params_count 8 @set_bit_0BBA_0BBF_text1 @textstyled_number_buf 14@ 15@ -1 -1 -1 -1 
05F5: call_scm_func @show_text_highpriority_number params_count 8 @set_bit_0BBA_0BBF_text2 @textnumber_buf 0@ 1@ 2@ 3@ 4@ 5@
wait 3000
14@ += 1
15@ -= 1
if and
 14@ > 31
 15@ < 0
jf @set_bit_1_6
0@ = 0
1@ = 1
2@ = 2
3@ = 0
4@ = -1
5@ = -2
14@ = 0
15@ = 31

:Clear_bit_1_6
0BC0: clear 0@ bit 14@
0BC1: clear 1@ bit 14@
0BC2: clear 2@ bit 14@
0BC3: clear 3@ bit 14@
0BC4: clear 4@ bit 14@
0BC5: clear 5@ bit 15@
05F5: call_scm_func @show_text_number_styled params_count 8 @Clear_bit_0BC0_0BC5_text1 @textstyled_number_buf 14@ 15@ -1 -1 -1 -1
05F5: call_scm_func @show_text_lowpriority_number params_count 8 @Clear_bit_0BC0_0BC5_text2 @textnumber_buf 0@ 1@ 2@ 3@ 4@ 5@
wait 3000
14@ += 1
15@ -= 1
if and
 14@ > 31
 15@ < 0 
jf @Clear_bit_1_6
jump @close_OPPlus_1_6

:close_test_OPPlus_1_6
wait 0
05E0: 0@ = read_memory _CPad_KeyBoardCheatString size 1 virtual_protect 0
05E0: 1@ = read_memory 0x00A10943 size 1 virtual_protect 0
05E0: 2@ = read_memory 0x00A10944 size 1 virtual_protect 0
05E0: 3@ = read_memory 0x00A10945 size 1 virtual_protect 0
05E0: 4@ = read_memory 0x00A10946 size 1 virtual_protect 0
05E0: 5@ = read_memory 0x00A10947 size 1 virtual_protect 0
if and
 5@ == 0x4F //O
 4@ == 0x50 //p                    
 3@ == 0x50 //p
 2@ == 0x4C //L
 1@ == 0x55 //U
 0@ == 0x53 //S
jf @test_bit_1_6 
05DF: write_memory _CPad_KeyBoardCheatString size 4 value 0 virtual_protect 1
05DF: write_memory 0x00A10946 size 2 value 0 virtual_protect 1

:close_OPPlus_1_6
05F5: call_scm_func @show_text_box params_count 2 @test_text_4 @textbox_buf
jump @test_OPPlus_1_6