:OP_0BB4_TestBit_1_6
//0@ = 0x0BB4
//1@ = _RegOpcode
//2@ = _getParamCollect
//3@ = _CompareFlag
05F7: _ASM_OP_0BB4 = label @ASM_OP_0BB4 offset
_ASM_OP_0BB4 += 0x09
14@ = _ASM_OP_0BB4
14@ += 0x4
2@ -= 14@
05DF: write_memory _ASM_OP_0BB4 size 4 value 2@ virtual_protect 1
_ASM_OP_0BB4 -= 0x09 

_ASM_OP_0BB4 += 0x0F
13@ = _CTheScripts_ScriptParams 
13@ += 0x4
05DF: write_memory _ASM_OP_0BB4 size 4 value 13@ virtual_protect 1
_ASM_OP_0BB4 -= 0x0F

_ASM_OP_0BB4 += 0x15
05DF: write_memory _ASM_OP_0BB4 size 4 value _CTheScripts_ScriptParams virtual_protect 1
_ASM_OP_0BB4 -= 0x15

_ASM_OP_0BB4 += 0x2A
14@ = _ASM_OP_0BB4
14@ += 0x4
3@ -= 14@
05DF: write_memory _ASM_OP_0BB4 size 4 value 3@ virtual_protect 1
_ASM_OP_0BB4 -= 0x2A

05DE: create_custom_thread 'SCR\OP+' OP_Thread_ID 1@ _ASM_OP_0BB4 CLEO_V_1_6   
05F6: ret 0 

:OP_0BB4_TestBit_2_0
//0@ = 0x0BB4
//1@ = _RegisterOpcode
//2@ = _Collect
//3@ = _UpdateCompareFlag
0AC6: _ASM_OP_0BB4 = label @ASM_OP_0BB4 offset
0A8E: 14@ = _ASM_OP_0BB4 + 0x09
0A8E: 13@ = 14@ + 0x4
0A8F: 12@ = 2@ - 13@
0A8C: write_memory 14@ size 4 value 12@ virtual_protect 1

0A8E: 14@ = _ASM_OP_0BB4 + 0x0F
0A8E: 13@ = _CTheScripts_ScriptParams + 0x4
0A8C: write_memory 14@ size 4 value 13@ virtual_protect 1

0A8E: 14@ = _ASM_OP_0BB4 + 0x15
0A8C: write_memory 14@ size 4 value _CTheScripts_ScriptParams virtual_protect 1

0A8E: 14@ = _ASM_OP_0BB4 + 0x2A
0606: set_memory_offset memory_pointer 14@ memory_to_point 3@ virtual_protect 1

0A92: create_custom_thread "SCR\OP+" OP_Thread_ID 1@ _ASM_OP_0BB4 CLEO_V_2_0
0AB2: ret 0

:ASM_OP_0BB4
hex
{0000}55               //push    ebp
{0001}8BEC             //mov     ebp, esp
{0003}8B4D 08          //mov     ecx, [ebp+arg_0]
{0006}6A 02            //push    2
{0008}E8 00000000      //call    CScript::Collect
{000D}8B0D 00000000    //mov     ecx, ds: ScriptParams+4
{0013}8B3D 00000000    //mov     edi, ds: ScriptParams 
{0019}BA 01000000      //mov     edx, 1
{001E}D3E2             //shl     edx, cl
{0020}8B4D 08          //mov     ecx, [ebp+arg_0]
{0023}85FA             //test    edx, edi
{0025}0F95C0           //setnz   al
{0028}50               //push    eax
{0029}E8 00000000      //call    CScript::UpdateCompareFlag
{002E}32C0             //xor     al, al
{0030}5D               //pop     ebp
{0031}C2 0400          //retn    4
end